{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,cAAc,SAE/CF,EAAgBG,iBAAiB,UAEjC,SAA0BC,GACxBA,EAAMC,iBAEN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,cAAcC,SAC9CC,EAAaL,EAAMM,MACnBC,EAAYN,EAAKK,MACjBE,EAAcN,EAAOI,MAC3B,IAAIG,EAAU,EACVC,EAAa,EAOjB,SAASC,IAoBX,IAAuBC,EAAUb,GAnB7BU,GAAW,EAEPA,EAAUI,OAAOL,IAAwC,IAAxBK,OAAOL,IAC1CM,cAAcJ,KAgBGE,EAZLH,EAYeV,EAZNQ,EAalB,IAAIQ,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEJ,E,MAAUb,IAEpBkB,EAAO,C,SAAEL,E,MAAUb,GAAQ,KAlB1BqB,MAAK,EAACR,SAAEA,EAAQb,MAAEA,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAqBV,QAAiBb,MAAU,IAEhEwB,OAAM,EAACX,SAAEA,EAAQb,MAAEA,MAClBR,EAAA8B,OAAOG,QAAQ,sBAAoBZ,QAAeb,MAAU,IAGhEN,EAAgBgC,Q,CArBlBC,YAAW,KACTf,IACAD,EAAaiB,YAAYhB,EAAaJ,EAAU,GAC/CF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promisesFormRef = document.querySelector('.form');\n\npromisesFormRef.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  const dealyValue = delay.value;\n  const stepValue = step.value;\n  const amountValue = amount.value;\n  let counter = 0;\n  let intervalId = 0;\n\n  setTimeout(() => {\n    showPromise();\n    intervalId = setInterval(showPromise, stepValue);\n  }, dealyValue);\n\n  function showPromise() {\n    counter += 1;\n\n    if (counter > Number(amountValue) || Number(amountValue) === 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    createPromise(counter, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    promisesFormRef.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$promisesFormRef","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","amount","currentTarget","elements","dealyValue","value","stepValue","amountValue","counter","intervalId","showPromise","position","Number","clearInterval","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure","reset","setTimeout","setInterval"],"version":3,"file":"03-promises.beb4b327.js.map"}