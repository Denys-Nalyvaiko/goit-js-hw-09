{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEwBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEjC,SAA0BC,GACxBA,EAAMC,iBAEN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OACjBC,EAAU,EACVC,EAAa,EAOjB,SAASC,IAiBX,IAAuBC,EAAUN,GAAVM,EAhBnBH,GAAW,EAgBkBH,EAdNC,EAAKM,MAevB,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUN,UAEpBU,EAAO,CAAEJ,WAAUN,S,KApBlBa,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MACjBX,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANjB,EAAM,M,IAE9DkB,OAAM,SAAAJ,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MAClBX,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANjB,EAAM,M,IAG1DG,IAAYiB,OAAOlB,EAAOK,QAC5Bc,cAAcjB,E,CAjBlBkB,YAAW,WACTjB,IACAD,EAAamB,YAAYlB,EAAaJ,EAAKM,M,GAC1CR,EAAMQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promisesFormRef = document.querySelector('.form');\n\npromisesFormRef.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let counter = 0;\n  let intervalId = 0;\n\n  setTimeout(() => {\n    showPromise();\n    intervalId = setInterval(showPromise, step.value);\n  }, delay.value);\n\n  function showPromise() {\n    counter += 1;\n\n    createPromise(counter, step.value)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (counter === Number(amount.value)) {\n      clearInterval(intervalId);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","counter","intervalId","showPromise","position","value","Promise","resolve","reject","Math","random","then","param","Notify","success","concat","catch","failure","Number","clearInterval","setTimeout","setInterval"],"version":3,"file":"03-promises.37817251.js.map"}