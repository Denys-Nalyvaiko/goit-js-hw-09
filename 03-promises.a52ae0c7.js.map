{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEwBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEjC,SAA0BC,GACxBA,EAAMC,iBAEN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,cAAcC,SACpD,IAAIC,EAAU,EACVC,EAAa,EAOjB,SAASC,IAiBX,IAAuBC,EAAUT,EAhB7BM,GAAW,GAgBQG,EAdLH,EAceN,EAdNE,EAAKQ,MAevB,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUT,IAEpBa,EAAO,C,SAAEJ,E,MAAUT,GAAQ,KApB1BgB,MAAK,EAACP,SAAEA,EAAQT,MAAEA,MACjBP,EAAAwB,OAAOC,QAAQ,uBAAqBT,QAAiBT,MAAU,IAEhEmB,OAAM,EAACV,SAAEA,EAAQT,MAAEA,MAClBP,EAAAwB,OAAOG,QAAQ,sBAAoBX,QAAeT,MAAU,IAG5DM,IAAYe,OAAOlB,EAAOO,QAC5BY,cAAcf,E,CAjBlBgB,YAAW,KACTf,IACAD,EAAaiB,YAAYhB,EAAaN,EAAKQ,MAAM,GAChDT,EAAMS,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promisesFormRef = document.querySelector('.form');\n\npromisesFormRef.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let counter = 0;\n  let intervalId = 0;\n\n  setTimeout(() => {\n    showPromise();\n    intervalId = setInterval(showPromise, step.value);\n  }, delay.value);\n\n  function showPromise() {\n    counter += 1;\n\n    createPromise(counter, step.value)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (counter === Number(amount.value)) {\n      clearInterval(intervalId);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","amount","currentTarget","elements","counter","intervalId","showPromise","position","value","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure","Number","clearInterval","setTimeout","setInterval"],"version":3,"file":"03-promises.a52ae0c7.js.map"}